from pyrogram import Client, emoji, filters

from bot_objects.user_data_objects import Company
from filters.company_info_filters import input_company_name_filter, cancel_company_input_filter, write_comp_name_filter, \
    confirm_comp_data_filter, reject_comp_by_name_filter, write_inn_filter, reject_comp_data_by_inn_filter, \
    write_ogrn_filter, write_telephone_filter, write_email_filter, write_address_filter, \
    write_top_management_post_filter, write_top_management_name_filter, write_telephone_again_filter, \
    write_email_again_filter
from keyboards.bot_keyboards import CANCEL_INPUT_COMPANY_DATA, START_FIRST_MEETING, confirm_or_reject_company_keyboard, \
    AFTER_ADD_COMPANY_DATA_KEYBOARD
from secondary_functions.dadata_helper import DadataHelper
from secondary_functions.req_to_bot_api import post_send_msg_to_open_line
from settings.config import USER_DATA_STORAGE, TEMPORARY_STORAGE


@Client.on_callback_query(confirm_comp_data_filter)
async def confirm_comp_data(client, callback_data):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏"""

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∫–ª–∞—Å—Å, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∞—Ç—Ç—Ä–∏–±—É—Ç—ã –∑–∞—Å–∞–∂–∏–≤–∞–µ–º –Ω–∞–ø—Ä—è–º—É—é, –±–µ–∑ —Å–µ—Ç—Ç–µ—Ä–æ–≤.
    company_data = TEMPORARY_STORAGE.get(callback_data.from_user.id)
    company_obj = USER_DATA_STORAGE[callback_data.from_user.id]['company']
    company_obj.comp_name = company_data.get("company_name")
    company_obj.address = company_data.get("company_address")
    company_obj.ogrn = company_data.get("company_ogrn")
    company_obj.inn = company_data.get("company_inn")
    company_obj.top_management_post = company_data.get("top_management_post")
    company_obj.top_management_name = company_data.get("top_management_name")
    # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä,
    result = await company_obj.write_company_data()
    if result:
        await callback_data.edit_message_text(
            text=f'üì±–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        company_obj.state_name = 'input_telephone_again'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback_data.from_user.id,
            username=callback_data.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω.',
            last_name=callback_data.from_user.last_name,
            name=callback_data.from_user.first_name
        )
    else:
        await callback_data.edit_message_text(
            text=f'üõ†–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏. –ú—ã —É–∂–µ —Ä–µ—à–∞–µ–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.\n'
                 f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.',
            reply_markup=START_FIRST_MEETING
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback_data.from_user.id,
            username=callback_data.from_user.username,
            msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏! –ö–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –ø–æ–∑–∂–µ.',
            last_name=callback_data.from_user.last_name,
            name=callback_data.from_user.first_name
        )
    # –¥–∞–ª—å—à–µ –Ω—É–∂–Ω–æ –µ—â—ë –∑–∞–ø—Ä–æ—Å–∏—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω –∏ —Ç–¥.
    # TODO: –±—ã–ª–æ –±—ã –ª—É—á—à–µ —Å–ø–µ—Ä–≤–∞ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –º—ã–ª–æ, –∞ –ø–æ—Ç–æ–º –≤—Å—ë, —á—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∫–æ–º–ø–∞–Ω–∏–∏.
    #  –ù–æ —è –Ω–∞—á–∞–ª —Å–ø–µ—Ä–≤–∞ –ø–æ-–¥—Ä—É–≥–æ–º—É –∏ —Å–µ–π—á–∞—Å –ø—Ä–∏–¥—ë—Ç—Å—è –ø–µ—Ä–µ–ø–∏—Å–∞—Ç—å –º–Ω–æ–≥–æ –∫–æ–¥–∞, —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –∫—Ä–∞—Å–∏–≤–æ.
    #  –ü–æ—ç—Ç–æ–º—É —Å–µ–π—á–∞—Å –æ—Ç —ç—Ç–æ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞ –ø–æ–π–¥—ë—Ç, —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å, –ª–∏–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –º—ã–ª–∞.
    #  –ù–∞ –±—É–¥—É—â–µ–µ –Ω–∞–¥–æ —ç—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ç—å.


"""–í–°–Å, –ß–¢–û –ù–ò–ñ–ï –ù–ê–î–û –ë–£–î–ï–¢ –£–ë–†–ê–¢–¨"""


@Client.on_message(filters.private & write_telephone_again_filter)
async def write_telephone_again(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...–µ—â—ë –æ–¥–∏–Ω."""

    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    write_result = await user_obj.set_telephone(telephone=message.text)
    if write_result:
        await message.reply_text(
            text=f'üìß–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π EMAIL.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        user_obj.state_name = 'input_email_again'
        # –ù–µ –∑–∞–±—ã–≤–∞–µ–º —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ–±—ä–µ–∫—Ç—É Company, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å –≤ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã
        company_obj.state_name = None
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ EMAIL',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n'
                 f'üì±–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –µ—â—ë —Ä–∞–∑.\n'
                     f'–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_message(filters.private & write_email_again_filter)
async def write_email_again(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –º—ã–ª–∞...–µ—â—ë –æ–¥–∏–Ω."""

    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    write_result = await user_obj.set_email(email=message.text)

    if write_result:  # –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –º—ã–ª–∞
        user_obj.state_name = None
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
        result_user = await user_obj.write_user_in_db()
        if result_user:
            await message.reply_text(
                text=f'üè¢<b>–°–ø–∞—Å–∏–±–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–∞.</b>\n\n'
                     f'üè¶–ì–æ—Ç–æ–≤—ã –ª–∏ –í—ã –≤–Ω–µ—Å—Ç–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞?',
                reply_markup=AFTER_ADD_COMPANY_DATA_KEYBOARD
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–ö–ª–∏–µ–Ω—Ç—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –±–∞–Ω–∫–∞',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )
        else:
            await message.reply_text(
                text=f'üõ†–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –º—ã —É–∂–µ —Ä–µ—à–∞–µ–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.\n'
                     f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.',
                reply_markup=START_FIRST_MEETING
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞! –ï–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –ø–æ–∑–∂–µ.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )

    else:  # –ï—Å–ª–∏ –º—ã–ª–æ –Ω–µ –ø—Ä–æ—à–ª–æ –≤–∞–ª–∏–¥–∞—Ü–∏—é
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π EMAIL</b>\n\n'
                 f'üìß–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ EMAIL <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–í–≤–µ–¥—ë–Ω –Ω–µ–≤–µ—Ä–Ω—ã–π EMAIL. –ó–∞–ø—Ä–æ—Å –µ—â—ë —Ä–∞–∑.\n–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


"""–í–°–Å, –ß–¢–û –í–´–®–ï –ù–ê–î–û –ë–£–î–ï–¢ –£–ë–†–ê–¢–¨"""


@Client.on_callback_query(cancel_company_input_filter)
async def cancel_company_input(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏."""

    await callback_query.edit_message_text(
        text=f'{emoji.CROSS_MARK}<b>–í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω—ë–Ω.</b>\n\n'
             f'{emoji.DOWN_ARROW}–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.',
        reply_markup=START_FIRST_MEETING
    )
    # –æ—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    company_obj = USER_DATA_STORAGE[callback_query.from_user.id]['company']
    company_obj.state_name = None
    user_obj = USER_DATA_STORAGE[callback_query.from_user.id]['user']
    user_obj.state_name = None
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏–ª –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(input_company_name_filter)
async def input_company_name(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –≤–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏."""

    await callback_query.edit_message_text(
        text=f'{emoji.OFFICE_BUILDING}–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏.',
        reply_markup=CANCEL_INPUT_COMPANY_DATA
    )
    # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ Company –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ —Å–ª–æ–≤–∞—Ä—å. –ó–¥–µ—Å—å –∂–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–∞ –≤–≤–æ–¥ –Ω–∞–∑–≤.–∫–æ–º–ø–∞–Ω–∏–∏.
    USER_DATA_STORAGE[callback_query.from_user.id]['company'] = Company(
        user_tlg_id=callback_query.from_user.id,
        state_name='input_company_name'
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø—Ä–∏—Å—Ç—É–ø–∏–ª –∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—é –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–∞–Ω–∏–∏.\n–ó–∞–ø—Ä–æ—Å –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–º–ø–∞–Ω–∏–∏.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_message(filters.private & write_comp_name_filter)
async def write_company_name(client, message):
    """–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∏—â–µ–º —á–µ—Ä–µ–∑ DaData –¥—Ä—É–≥–∏–µ –¥–∞–Ω–Ω—ã–µ."""

    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    company_obj.comp_name = message.text
    # –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –≤ –î–∞–¥–∞—Ç–∞ –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–∞–Ω–∏–∏
    company_data = DadataHelper.find_company_data_by_name(company_obj.comp_name)
    if company_data:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –î–∞–î–∞—Ç–∞ –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ö—ç–Ω–¥–ª–µ—Ä–∞
        TEMPORARY_STORAGE[message.from_user.id] = company_data
        # –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–∞—à–ª–æ—Å—å, —Ç–æ –¥–∞—ë–º –∫–ª–∏–µ–Ω—Ç—É –Ω–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        inline_keyboard = await confirm_or_reject_company_keyboard(reject_step='comp_name')
        await message.reply_text(
            text=f'{emoji.CARD_INDEX_DIVIDERS}<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏.</b>\n\n'
                 f'‚ñ† <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</b>: {company_data.get("company_name")}\n'
                 f'‚ñ† <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ</b>: {company_data.get("top_management_post")}\n'
                 f'‚ñ† <b>–§.–ò.–û. —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ</b>: {company_data.get("top_management_name")}\n'
                 f'‚ñ† <b>–û–ì–†–ù</b>: {company_data.get("company_ogrn")}\n'
                 f'‚ñ† <b>–ò–ù–ù</b>: {company_data.get("company_inn")}\n'
                 f'‚ñ† <b>–ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏</b>: {company_data.get("company_address")}\n',
            reply_markup=inline_keyboard
        )
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        company_obj.state_name = None
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞. –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç, —Ç–æ —Å–ø—Ä–æ—Å–∏—Ç—å –ò–ù–ù
    else:
        company_obj.state_name = 'input_inn'
        await message.reply_text(
            text=f'üìç–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∫–ª–∏–µ–Ω—Ç–∞ –ò–ù–ù.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_callback_query(reject_comp_by_name_filter)
async def reject_comp_by_name(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏, –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –µ—ë –Ω–∞–∑–≤–∞–Ω–∏—é"""

    TEMPORARY_STORAGE.pop(callback_query.from_user.id)
    company_obj = USER_DATA_STORAGE[callback_query.from_user.id]['company']
    company_obj.state_name = 'input_inn'
    await callback_query.edit_message_text(
        text=f'üìç–í–≤–µ–¥–∏—Ç–µ –ò–ù–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
        reply_markup=CANCEL_INPUT_COMPANY_DATA
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª–æ–Ω–∏–ª –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –∫–ª–∏–µ–Ω—Ç–∞ –ò–ù–ù.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_message(filters.private & write_inn_filter)
async def write_inn(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –ò–ù–ù –∏ –∑–∞–ø—Ä–æ—Å –ø–æ –Ω–µ–º—É –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏ —á–µ—Ä–µ–∑ DaData"""

    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    write_result = await company_obj.set_inn(inn=message.text.replace(' ', ''))
    if write_result:

        # –ü–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∏–Ω—Ñ—É —á–µ—Ä–µ–∑ DaData
        company_data = DadataHelper.find_company_data_by_inn(company_obj.inn)
        if company_data:
            TEMPORARY_STORAGE[message.from_user.id] = company_data
            # –ï—Å–ª–∏ DaData –¥–∞–ª–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            inline_keyboard = await confirm_or_reject_company_keyboard(reject_step='inn')
            await message.reply_text(
                text=f'{emoji.CARD_INDEX_DIVIDERS}<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏.</b>\n\n'
                     f'‚ñ† <b>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏</b>: {company_data.get("company_name")}\n'
                     f'‚ñ† <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ</b>: {company_data.get("top_management_post")}\n'
                     f'‚ñ† <b>–§.–ò.–û. —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ</b>: {company_data.get("top_management_name")}\n'
                     f'‚ñ† <b>–û–ì–†–ù</b>: {company_data.get("company_ogrn")}\n'
                     f'‚ñ† <b>–ò–ù–ù</b>: {company_data.get("company_inn")}\n'
                     f'‚ñ† <b>–ê–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏</b>: {company_data.get("company_address")}\n',
                reply_markup=inline_keyboard
            )
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            company_obj.state_name = None
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–ù–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ò–ù–ù. –ö–ª–∏–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )
        else:
            company_obj.state_name = 'input_ogrn'
            await message.reply_text(
                text=f'üìç–í–≤–µ–¥–∏—Ç–µ –û–ì–†–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
                reply_markup=CANCEL_INPUT_COMPANY_DATA
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–ù–ï –Ω–∞–π–¥–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –æ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –ò–ù–ù. –ó–∞–ø—Ä–æ—Å –û–ì–†–ù.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )

    else:
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ò–ù–ù</b>\n\n'
                 f'üìç–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ –ò–ù–ù <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –ò–ù–ù –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_callback_query(reject_comp_data_by_inn_filter)
async def reject_comp_data_by_inn(client, callback_query):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ—Å–ª–µ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –ò–ù–ù"""

    TEMPORARY_STORAGE.pop(callback_query.from_user.id)
    company_obj = USER_DATA_STORAGE[callback_query.from_user.id]['company']
    company_obj.state_name = 'input_ogrn'
    await callback_query.edit_message_text(
        text=f'üìç–í–≤–µ–¥–∏—Ç–µ –û–ì–†–ù –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏',
        reply_markup=CANCEL_INPUT_COMPANY_DATA
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –¥–∞–Ω–Ω—ã–µ –µ–≥–æ –∫–æ–º–ø–∞–Ω–∏–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ –ò–ù–ù. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –û–ì–†–ù.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_message(filters.private & write_ogrn_filter)
async def write_ogrn(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –û–ì–†–ù, –ø–æ–∏—Å–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –Ω–µ–º—É –≤ –î–∞–î–∞—Ç–∞ –∏ —Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–∞—è —ç—Ç–æ–º—É –ª–æ–≥–∏–∫–∞."""

    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    write_result = await company_obj.set_ogrn(ogrn=message.text.replace(' ', ''))
    if write_result:
        # –ï—Å–ª–∏ –û–ì–†–ù —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω
        await message.reply_text(
            text=f'üì±–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        company_obj.state_name = 'input_telephone'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ó–∞–ø–∏—Å—å –û–ì–†–ù –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–ø—Ä–æ—Å –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –û–ì–†–ù</b>\n\n'
                 f'üìç–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ –û–ì–†–ù <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –û–ì–†–ù. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_message(filters.private & write_telephone_filter)
async def write_telephone(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""

    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    write_result = await user_obj.set_telephone(telephone=message.text)
    if write_result:
        await message.reply_text(
            text=f'üìß–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π EMAIL.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        user_obj.state_name = 'input_email'
        # –ù–µ –∑–∞–±—ã–≤–∞–µ–º —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ–±—ä–µ–∫—Ç—É Company, —á—Ç–æ–±—ã –Ω–µ –ø–æ–ø–∞–¥–∞—Ç—å –≤ –Ω–µ–Ω—É–∂–Ω—ã–µ —Ö—ç–Ω–¥–ª–µ—Ä—ã
        company_obj.state_name = None
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º EMAIL.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b>\n\n'
                 f'üì±–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n'
                     f'–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_message(filters.private & write_email_filter)
async def write_email(client, message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –º—ã–ª–∞."""

    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    write_result = await user_obj.set_email(email=message.text)
    if write_result:
        await message.reply_text(
            text=f'üó∫–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        user_obj.state_name = 'input_address'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ó–∞–ø–∏—Å—ã–≤–∞–µ–º EMAIL –∫–ª–∏–µ–Ω—Ç–∞ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text='‚ùï<b>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π EMAIL</b>\n\n'
                 f'üìß–í–≤–µ–¥—ë–Ω–Ω—ã–π –í–∞–º–∏ EMAIL <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_COMPANY_DATA
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π EMAIL. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_message(filters.private & write_address_filter)
async def write_address(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –∞–¥—Ä–µ—Å–∞ –∫–æ–º–ø–∞–Ω–∏–∏"""

    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    company_obj.address = message.text
    company_obj.state_name = 'input_top_manage_post'
    user_obj.state_name = None  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ –æ–±—ä–µ–∫—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await message.reply_text(
        text=f'üíº–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –ª–∏—Ü–∞ (–î–∏—Ä–µ–∫—Ç–æ—Ä, –£–ø—Ä–∞–≤–ª—è—é—â–∏–π –∏ —Ç. –¥.)',
        reply_markup=CANCEL_INPUT_COMPANY_DATA
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=message.from_user.id,
        username=message.from_user.username,
        msg_text=f'–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∞–¥—Ä–µ—Å –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –ª–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏.',
        last_name=message.from_user.last_name,
        name=message.from_user.first_name
    )


@Client.on_message(filters.private & write_top_management_post_filter)
async def write_top_management_post(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≥–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏"""

    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    company_obj.top_management_post = message.text
    company_obj.state_name = 'input_top_manage_name'
    await message.reply_text(
        text=f'üßî–í–≤–µ–¥–∏—Ç–µ –§–ò–û –≥–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –∫–æ–º–ø–∞–Ω–∏–∏.',
        reply_markup=CANCEL_INPUT_COMPANY_DATA
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=message.from_user.id,
        username=message.from_user.username,
        msg_text=f'–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–æ–ª–∂–Ω–æ—Å—Ç—å —É–ø—Ä–∞–≤–ª—è—é—â–µ–≥–æ –ª–∏—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –µ–≥–æ –§–ò–û.',
        last_name=message.from_user.last_name,
        name=message.from_user.first_name
    )


@Client.on_message(filters.private & write_top_management_name_filter)
async def write_top_management_name(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –§–ò–û –≥–ª–∞–≤–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω—Ü–∞ –∫–æ–º–ø–∞–Ω–∏–∏"""

    company_obj = USER_DATA_STORAGE[message.from_user.id]['company']
    user_obj = USER_DATA_STORAGE[message.from_user.id]['user']
    company_obj.top_management_name = message.text
    company_obj.state_name = None
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ –ë–î
    result_comp = await company_obj.write_company_data()
    result_user = await user_obj.write_user_in_db()
    if result_comp and result_user:
        await message.reply_text(
            text=f'üè¢<b>–°–ø–∞—Å–∏–±–æ, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞–ø–∏—Å–∞–Ω–∞.</b>\n\n'
                 f'üè¶–ì–æ—Ç–æ–≤—ã –ª–∏ –í—ã –≤–Ω–µ—Å—Ç–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞?',
            reply_markup=AFTER_ADD_COMPANY_DATA_KEYBOARD
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–ª–∏–µ–Ω—Ç—É –≤–≤–µ—Å—Ç–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text=f'üõ†–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –¥–∞–Ω–Ω—ã–µ, –º—ã —É–∂–µ —Ä–µ—à–∞–µ–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.\n'
                 f'–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.',
            reply_markup=START_FIRST_MEETING
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–ø–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞! –ö–ª–∏–µ–Ω—Ç—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –ø–æ–∑–∂–µ.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
