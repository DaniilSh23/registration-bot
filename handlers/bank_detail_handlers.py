from pyrogram import Client, emoji, filters

from bot_objects.user_data_objects import BankDetail
from filters.bank_detail_filters import start_input_bank_detail_filter, cancel_bank_detail_input_filter, \
    write_bik_filter, write_cor_a_filter, write_bank_name_filter, write_rs_filter, confirm_bank_data_filter, \
    reject_bank_data_filter
from keyboards.bot_keyboards import CANCEL_INPUT_BANK_DETAIL_KBRD, AFTER_ADD_COMPANY_DATA_KEYBOARD, \
    confirm_or_reject_bank_keyboard, BEFORE_CALCULATE_KEYBOARD
from secondary_functions.dadata_helper import DadataHelper
from secondary_functions.different_functions import get_company_data_from_storage_or_req
from secondary_functions.req_to_bot_api import get_for_crt_comp_and_bank_dtail_in_btrx, post_send_msg_to_open_line
from settings.config import USER_DATA_STORAGE, TEMPORARY_STORAGE


@Client.on_callback_query(cancel_bank_detail_input_filter)
async def cancel_bank_detail_input(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –≤–≤–æ–¥–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤."""
    bank_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('bank')
    bank_obj.state_name = None
    await callback_query.edit_message_text(
        text=f'{emoji.CROSS_MARK}–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤–≤–æ–¥ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –±–∞–Ω–∫–∞{emoji.BANK}',
        reply_markup=AFTER_ADD_COMPANY_DATA_KEYBOARD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text='–ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏–ª –≤–≤–æ–¥ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(start_input_bank_detail_filter)
async def start_input_bank_detail(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç–∞ —Å–±–æ—Ä–∞ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –±–∞–Ω–∫–∞. –ó–∞–ø—Ä–æ—Å–∏–º –ë–ò–ö"""

    # –°–æ–∑–¥–∞—ë–º –∏–Ω—Å—Ç–∞–Ω—Å –∫–ª–∞—Å—Å–∞ BankDetail
    comp_obj = await get_company_data_from_storage_or_req(user_id=callback_query.from_user.id)
    bank_obj = BankDetail(inn_comp=comp_obj.inn)
    bank_obj.state_name = 'bik_input'
    USER_DATA_STORAGE[callback_query.from_user.id]['bank'] = bank_obj
    await callback_query.edit_message_text(
        text=f'üìé–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, <b>–ë–ò–ö</b> –í–∞—à–µ–≥–æ –±–∞–Ω–∫–∞',
        reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text='–ù–∞—á–∞—Ç —Å–±–æ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤. –ó–∞–ø—Ä–æ—à–µ–Ω –ë–ò–ö.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_message(filters.private & write_bik_filter)
async def write_bik(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –ë–ò–ö, –ø–æ–∏—Å–∫ –ø–æ –Ω–µ–º—É —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –±–∞–Ω–∫–∞."""

    bank_obj = USER_DATA_STORAGE[message.from_user.id].get('bank')
    write_result = await bank_obj.set_bik(bik=message.text.replace(' ', ''))
    if write_result:    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ë–ò–ö –ø—Ä–æ—à—ë–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω –≤ –∫–ª–∞—Å—Å
        bank_data = DadataHelper.find_bank_data_by_bik(bik=bank_obj.bik)
        if bank_data:   # –ï—Å–ª–∏ –î–∞–î–∞—Ç–∞ –¥–∞–ª–∞ –Ω–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            TEMPORARY_STORAGE[message.from_user.id] = bank_data
            bank_obj.state_name = None
            inline_keyboard = await confirm_or_reject_bank_keyboard()
            await message.reply_text(
                text=f'<b>–í–æ—Ç, —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–µ—Ä–Ω—ã –ª–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã.</b>\n\n'
                     f'<b>–ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞:</b> {bank_data.get("bank_name")}\n'
                     f'<b>–ö–æ—Ä—Ä–µ—Å–ø. —Å—á—ë—Ç:</b> {bank_data.get("bank_ca")}\n'
                     f'<b>–ë–ò–ö –±–∞–Ω–∫–∞:</b> {bank_data.get("bank_bik")}\n',
                reply_markup=inline_keyboard
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text='–ù–∞–π–¥–µ–Ω –±–∞–Ω–∫ –ø–æ –ë–ò–ö. –ö–ª–∏–µ–Ω—Çe –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )
        else:   # –ï—Å–ª–∏ –î–∞–î–∞—Ç–∞ –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –Ω–∏—á–µ–≥–æ
            bank_obj.state_name = 'input_cor_a'
            await message.reply_text(
                text=f'üìé–í–≤–µ–¥–∏—Ç–µ <b>–ö–æ—Ä. —Å—á–µ—Ç:</b>',
                reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text='–ë–∞–Ω–∫ –∫–ª–∏–µ–Ω—Ç–∞ –ù–ï –ë–´–õ –ù–ê–ô–î–ï–ù –ø–æ –ë–ò–ö. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ—Ä.—Å—á—ë—Ç.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )

    else:   # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –ë–ò–ö –Ω–µ –ø—Ä–æ—à—ë–ª –≤–∞–ª–∏–¥–∞—Ü–∏—é
        await message.reply_text(
            text=f'‚ùï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π <b>–ë–ò–ö</b>.\n\n'
                 f'‚úñ –ó–Ω–∞—á–µ–Ω–∏–µ <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –ë–ò–ö, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.\n–í–æ—Ç, —á—Ç–æ –ø—Ä–∏—Å–ª–∞–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_callback_query(confirm_bank_data_filter)
async def confirm_bank_data(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –î–∞–î–∞—Ç–∞."""

    bank_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('bank')
    bank_data = TEMPORARY_STORAGE[callback_query.from_user.id]
    bank_obj.bik = bank_data.get("bank_bik")
    bank_obj.cor_a = bank_data.get("bank_ca")
    bank_obj.bank_name = bank_data.get("bank_name")
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –†–°
    bank_obj.state_name = 'input_rs'
    await callback_query.edit_message_text(
        text=f'üìé–í–≤–µ–¥–∏—Ç–µ <b>—Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á—ë—Ç</b>',
        reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á—ë—Ç.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(reject_bank_data_filter)
async def reject_bank_data(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É –ù–ï –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ –î–∞–î–∞—Ç–∞."""

    bank_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('bank')
    bank_obj.state_name = 'input_cor_a'
    await callback_query.edit_message_text(
        text=f'üìé–í–≤–µ–¥–∏—Ç–µ <b>–ö–æ—Ä. —Å—á–µ—Ç:</b>',
        reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –ù–ï –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ—Ä.—Å—á—ë—Ç.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_message(filters.private & write_cor_a_filter)
async def write_cor_a(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –∫–æ—Ä.—Å—á—ë—Ç–∞."""

    bank_obj = USER_DATA_STORAGE[message.from_user.id].get('bank')
    write_result = await bank_obj.set_cor_a(cor_a=message.text.replace(' ', ''))
    if write_result:
        bank_obj.state_name = 'input_bank_name'
        await message.reply_text(
            text=f'üìé–í–≤–µ–¥–∏—Ç–µ <b>–Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞</b>',
            reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–æ—Ä.—Å—á—ë—Ç. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞.',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
    else:
        await message.reply_text(
            text=f'‚ùï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π <b>–∫–æ—Ä.—Å—á—ë—Ç</b>.\n\n'
                 f'‚úñ –ó–Ω–∞—á–µ–Ω–∏–µ <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–æ—Ä.—Å—á—ë—Ç. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ.\n–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )


@Client.on_message(filters.private & write_bank_name_filter)
async def write_bank_name(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –±–∞–Ω–∫–∞."""

    bank_obj = USER_DATA_STORAGE[message.from_user.id].get('bank')
    bank_obj.bank_name = message.text
    bank_obj.state_name = 'input_rs'
    await message.reply_text(
        text=f'üìé–í–≤–µ–¥–∏—Ç–µ <b>—Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á—ë—Ç</b>',
        reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=message.from_user.id,
        username=message.from_user.username,
        msg_text=f'–ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á—ë—Ç.',
        last_name=message.from_user.last_name,
        name=message.from_user.first_name
    )


@Client.on_message(filters.private & write_rs_filter)
async def write_rs(client, message):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Ä–∞—Å—á—ë—Ç–Ω–æ–≥–æ —Å—á—ë—Ç–∞."""

    bank_obj = USER_DATA_STORAGE[message.from_user.id].get('bank')
    write_result = await bank_obj.set_rs(rs=message.text.replace(' ', ''))
    if write_result:
        # –°–ø–µ—Ä–≤–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥, –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å—ã –≤ –ë–∏—Ç—Ä–∏–∫—Å –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç—ã. –ß—Ç–æ–±—ã –∫–ª–∏–µ–Ω—Ç –Ω–µ –∂–¥–∞–ª
        bank_obj.state_name = None
        this_msg = await message.reply_text(
            text=f'{emoji.BANK}<b>–°–ø–∞—Å–∏–±–æ, —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –∑–∞–ø–∏—Å–∞–Ω—ã</b>\n\n'
                 f'üìí–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É –æ–ø—Ü–∏–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è.',
            reply_markup=BEFORE_CALCULATE_KEYBOARD
        )
        response = await bank_obj.write_company_bank_details()
        add_to_btrx_rslt = await get_for_crt_comp_and_bank_dtail_in_btrx(tlg_id=message.from_user.id)
        if not response and not add_to_btrx_rslt:   # –ï—Å–ª–∏ –Ω–µ—É–¥–∞—á–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã
            await this_msg.edit_text(   # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–Ω–µ–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                text=f'üõ†–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. –ú—ã —É–∂–µ —Ä–µ—à–∞–µ–º —ç—Ç—É –ø—Ä–æ–±–ª–µ–º—É.\n'
                     f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –ø–æ–∑–∂–µ.',
                reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø–∏—Å–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞! –ï–º—É –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤–≤–æ–¥ –ø–æ–∑–∂–µ.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )
        else:   # –í —Å–ª—É—á–∞–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=message.from_user.id,
                username=message.from_user.username,
                msg_text=f'–†–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –∫–ª–∏–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ü–∏–∏ –±—É—Ö.—Å–æ–ø—Ä–æ–≤.',
                last_name=message.from_user.last_name,
                name=message.from_user.first_name
            )
    else:
        await message.reply_text(
            text=f'‚ùï –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π <b>—Ä–∞—Å—á—ë—Å—Ç–Ω—ã–π —Å—á—ë—Ç</b>.\n\n'
                 f'‚úñ –ó–Ω–∞—á–µ–Ω–∏–µ <code>{message.text}</code> –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º–∞—Ç—É.',
            reply_markup=CANCEL_INPUT_BANK_DETAIL_KBRD
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=message.from_user.id,
            username=message.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤–≤—ë–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ä–∞—Å—á—ë—Ç–Ω—ã–π —Å—á—ë—Ç. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ. '
                     f'–í–æ—Ç, —á—Ç–æ –≤–≤—ë–ª –∫–ª–∏–µ–Ω—Ç:\n\t{message.text}',
            last_name=message.from_user.last_name,
            name=message.from_user.first_name
        )
