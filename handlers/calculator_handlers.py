from pyrogram import Client, emoji

from bot_objects.calculator_objects import CalcOptions
from filters.calculator_filters import start_calculate_filter, cancel_calc_filter, ind_pred_tax_system_filter, \
    ask_patent_numbers_filter, plus_patent_filter, minus_patent_filter, move_to_business_filter, \
    without_mix_tax_systm_filter, ooo_tax_system_filter, choice_employees_number_filter, plus_employee_filter, \
    minus_employee_filter, source_docs_fst_step_filter, \
    input_numb_docs_for_prod_acc_filter, minus_prod_doc_filter, plus_prod_doc_filter, need_product_reporting_filter, \
    show_buh_result_filter, calculate_cost_filter, write_source_docs_and_ask_control_it_filter, \
    need_prod_accounting_filter, work_on_mp_filter, change_mp_choice_filter, need_prod_accounting_after_mp_filter
from keyboards.bot_keyboards import LEGAL_FORM_KBRD, CANCEL_CALCULATE_KBRD, IND_PRED_TAX_SYSTEM_KBRD, \
    change_patent_numbs_keyboard, IS_RUNNING_BUSINESS, OOO_TAX_SYSTEM_KBRD, change_employees_numb_keyboard, \
    SOURCE_DOCUMENTS_NUMB_KBRD, PRODUCT_ACCOUNTING_KBRD, change_product_docs_keyboard, PRODUCT_REPORTING_KBRD, \
    SHOW_BUH_OPTIONS_KBRD, SRC_DOCS_CONTROL_KBRD, WORK_ON_MP_KBRD, form_choice_mp_kbrd
from secondary_functions.different_functions import make_text_for_buh_result
from secondary_functions.req_to_bot_api import post_for_add_products_in_deal_btrx, get_for_create_docs_in_btrx, \
    post_send_msg_to_open_line
from settings.config import USER_DATA_STORAGE
from loguru import logger


@Client.on_callback_query(cancel_calc_filter)
async def cancel_calc(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä—ã –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã –≤ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–µ."""

    await callback_query.edit_message_text(
        text=f'<b>üìí–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π –±—É—Ö.—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è</b>.\n\n'
             f'‚è≥–ö —á–µ–º—É —Ç—Ä–∞—Ç–∏—Ç—å –≤—Ä–µ–º—è –Ω–∞ —Å–æ–º–Ω–µ–Ω–∏—è?\n'
             f'ü™∂<code>"–î–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–º–æ—á–∏–π ‚Äî –∫–ª—é—á –∫ —É—Å–ø–µ—à–Ω–æ–º—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é..."</code>\n\n'
             f'–î–æ–≤–µ—Ä—å—Ç–µ —ç—Ç—É —Ä–∞–±–æ—Ç—É <b>–Ω–∞—à–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º!</b>üë©‚Äçüíª{emoji.THUMBS_UP}',
        reply_markup=CANCEL_CALCULATE_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –æ—Ç–º–µ–Ω–∏–ª –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π –±—É—Ö.—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è. –ï–º—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—Å—ë-—Ç–∞–∫–∏ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(start_calculate_filter)
async def choice_of_legal_form(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä —Å—Ç–∞—Ä—Ç–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞. –í—ã–±–æ—Ä –ø—Ä–∞–≤–æ–≤–æ–π —Ñ–æ—Ä–º—ã –ò–ü –∏–ª–∏ –û–û–û."""

    await callback_query.answer('ü§ñ–í—ã–±–æ—Ä –ø—Ä–∞–≤–æ–≤–æ–π —Ñ–æ—Ä–º—ã')
    await callback_query.edit_message_text(
        text=f'üìé–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–µ—Ç–µ <b>–ø—Ä–∞–≤–æ–≤—É—é —Ñ–æ—Ä–º—É</b>.',
        reply_markup=LEGAL_FORM_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –Ω–∞—á–∞–ª –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π –±—É—Ö.—Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –Ω–µ–≥–æ –ø—Ä–∞–≤–æ–≤—É—é —Ñ–æ—Ä–º—É.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(ind_pred_tax_system_filter)
async def ind_pred_tax_system(client, callback_query):
    """–í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –ò–ü"""

    await callback_query.answer('ü§ñ–í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è')
    calc_obj = CalcOptions(tlg_id=callback_query.from_user.id, legal_form='–ò–ü')
    USER_DATA_STORAGE[callback_query.from_user.id]['calculator'] = calc_obj
    await callback_query.edit_message_text(
        text=f'üìé–í—ã–±–µ—Ä–µ—Ç–µ <b>—Å–∏—Å—Ç–µ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è</b>.',
        reply_markup=IND_PRED_TAX_SYSTEM_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ó–∞–ø—Ä–æ—Å —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(ask_patent_numbers_filter)
async def ask_patent_numbers(client, callback_query):
    """–ó–∞–ø–∏—Å—å —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–∞–∂. –∏ –∑–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–∞—Ç–µ–Ω—Ç–æ–≤, –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±—ã–ª –º–∏–∫—Å –ø–∞—Ç–µ–Ω—Ç+—á—Ç–æ-—Ç–æ –µ—â—ë."""

    await callback_query.answer('ü§ñ–í—ã–±–æ—Ä –∫–æ–ª-–≤–∞ –ø–∞—Ç–µ–Ω—Ç–æ–≤')
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    await calc_obj.set_tax_system(value=callback_query.data.split()[1])  # –ó–∞–ø–∏—Å—å —Å–∏—Å-–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂.
    calc_obj.patent_numbers = 1
    inline_keyboard = await change_patent_numbs_keyboard(patent_numbs=calc_obj.patent_numbers)
    await callback_query.edit_message_text(
        text=f'üìé–£–∫–∞–∂–∏—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ <u>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö</u> –ø–∞—Ç–µ–Ω—Ç–æ–≤</b>.\n\n'
             f'<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤: {calc_obj.patent_numbers}</i>',
        reply_markup=inline_keyboard
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –≤—ã–±—Ä–∞–ª –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –ø–∞—Ç–µ–Ω—Ç + –∏–Ω–∞—è —Ñ–æ—Ä–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–ª-–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(plus_patent_filter)
async def plus_patent(client, callback_query):
    """–ü—Ä–∏–±–∞–≤–ª—è–µ–º –æ–¥–∏–Ω –ø–∞—Ç–µ–Ω—Ç –∫ –æ–±—â–µ–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""

    await callback_query.answer('ü§ñ–ü–ª—é—Å 1 –ø–∞—Ç–µ–Ω—Ç')
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    calc_obj.patent_numbers += 1
    inline_keyboard = await change_patent_numbs_keyboard(patent_numbs=calc_obj.patent_numbers)
    await callback_query.edit_message_text(
        text=f'üìé–£–∫–∞–∂–∏—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ <u>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö</u> –ø–∞—Ç–µ–Ω—Ç–æ–≤</b>.\n\n'
             f'<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤: {calc_obj.patent_numbers}</i>',
        reply_markup=inline_keyboard
    )


@Client.on_callback_query(minus_patent_filter)
async def minus_patent(client, callback_query):
    """–û—Ç–Ω–∏–º–∞–µ–º –æ–¥–∏–Ω –ø–∞—Ç–µ–Ω—Ç –æ—Ç –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""

    await callback_query.answer('ü§ñ–ú–∏–Ω—É—Å 1 –ø–∞—Ç–µ–Ω—Ç')
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    calc_obj.patent_numbers -= 1
    text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ <u>–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö</u> –ø–∞—Ç–µ–Ω—Ç–æ–≤</b>.\n\n' \
                       f'<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤: {calc_obj.patent_numbers}</i>'
    if calc_obj.patent_numbers < 1:
        calc_obj.patent_numbers = 1
        text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤</b>.\n\n' \
                           f'<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤: {calc_obj.patent_numbers}</i>\n' \
                           f'‚ùó<b>–ú–∏–Ω–∏–º—É–º 1 –ø–∞—Ç–µ–Ω—Ç.</b>'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback_query.from_user.id,
            username=callback_query.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—å—à–µ 1 –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–∞—Ç–µ–Ω—Ç–∞.',
            last_name=callback_query.from_user.last_name,
            name=callback_query.from_user.first_name
        )
    inline_keyboard = await change_patent_numbs_keyboard(patent_numbs=calc_obj.patent_numbers)
    try:
        await callback_query.edit_message_text(
            text=text_for_message,
            reply_markup=inline_keyboard
        )
    except Exception:
        logger.info(f'–ö—Ç–æ-—Ç–æ –Ω–∞–∏–≤–Ω–æ —É–±–µ–∂–¥—ë–Ω, —á—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ –ø–∞—Ç–µ–Ω—Ç–∞. '
                    f'\n\tTG ID {callback_query.from_user.id}')


@Client.on_callback_query(ooo_tax_system_filter)
async def ooo_tax_system(client, callback_query):
    """–í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –û–û–û."""

    await callback_query.answer('ü§ñ–í—ã–±–æ—Ä —Å–∏—Å—Ç–µ–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –û–û–û')
    calc_obj = CalcOptions(tlg_id=callback_query.from_user.id, legal_form='–û–û–û')
    USER_DATA_STORAGE[callback_query.from_user.id]['calculator'] = calc_obj
    text_for_message = 'üìé–í—ã–±–µ—Ä–µ—Ç–µ —Å–∏—Å—Ç–µ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è?'
    await callback_query.edit_message_text(
        text=text_for_message,
        reply_markup=OOO_TAX_SYSTEM_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—ã–±—Ä–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –û–û–û',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(move_to_business_filter | without_mix_tax_systm_filter)
async def move_to_business(client, callback_query):
    """–ó–∞–ø—Ä–æ—Å –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è / –Ω–µ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"""

    await callback_query.answer('ü§ñ–û—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–æ–º')
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    split_call_data = callback_query.data.split()
    if len(split_call_data) == 2 and split_call_data[0] == 'do_bsns':
        await calc_obj.set_tax_system(value=split_call_data[1])  # –ó–∞–ø–∏—Å—å —Å–∏—Å-–º—ã –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂.
    text_for_message = 'üìé–û—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ª–∏ –±–∏–∑–Ω–µ—Å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å?'
    await callback_query.edit_message_text(
        text=text_for_message,
        reply_markup=IS_RUNNING_BUSINESS
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –ª–∏ –±–∏–∑–Ω–µ—Å –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


''' –ë–ò–ó–ù–ï–° –û–°–£–©–ï–°–¢–í–õ–Ø–ï–¢ –í–ï–î–ï–ù–ò–ï –î–ï–Ø–¢–ï–õ–¨–ù–û–°–¢–ò (–ù–ê–ß–ê–õ–û) '''


@Client.on_callback_query(choice_employees_number_filter)
async def choice_employees_number(client, callback_query):
    """–í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""

    await callback_query.answer('ü§ñ–í—ã–±–æ—Ä –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤')
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    # –ó–∞–ø–∏—Å—å –∞—Ç—Ç—Ä–∏–±—É—Ç–∞ –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω–∏—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –±–∏–∑–Ω–µ—Å–æ–º
    calc_obj.do_business = True
    calc_obj.employees_number = 1
    # –î–ª—è –ò–ü —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑–º–µ–Ω–∏–º –Ω–∞ 0
    if calc_obj.legal_form == '–ò–ü':
        calc_obj.employees_number = 0
    text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤'
    inline_keyboard = await change_employees_numb_keyboard(employees_numb=calc_obj.employees_number)
    await callback_query.edit_message_text(
        text=text_for_message,
        reply_markup=inline_keyboard
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback_query.from_user.id,
        username=callback_query.from_user.username,
        msg_text=f'–ü—Ä–æ—Å–∏–º –≤—ã–±—Ä–∞—Ç—å –∫–æ–ª-–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.',
        last_name=callback_query.from_user.last_name,
        name=callback_query.from_user.first_name
    )


@Client.on_callback_query(plus_employee_filter)
async def plus_employee(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–ª—é—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"""

    await callback_query.answer('ü§ñ–ü–ª—é—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫(–∏)')
    employee_numb = callback_query.data.split()[1]
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    calc_obj.employees_number += int(employee_numb)
    text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n\n' \
                       f'<i>üë•–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>{calc_obj.employees_number}</b></i>'
    inline_keyboard = await change_employees_numb_keyboard(employees_numb=calc_obj.employees_number)
    await callback_query.edit_message_text(
        text=text_for_message,
        reply_markup=inline_keyboard
    )


@Client.on_callback_query(minus_employee_filter)
async def minus_employee(client, callback_query):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–∏–Ω—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"""

    await callback_query.answer('ü§ñ–ú–∏–Ω—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫(–∏)')
    employee_numb = callback_query.data.split()[1]
    calc_obj = USER_DATA_STORAGE[callback_query.from_user.id].get('calculator')
    calc_obj.employees_number -= int(employee_numb)
    text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n\n' \
                       f'<i>üë•–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>{calc_obj.employees_number}</b></i>'
    if calc_obj.employees_number < 1 and calc_obj.legal_form == '–û–û–û':
        calc_obj.employees_number = 1
        text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n\n' \
                           f'‚ùó<b>–ú–∏–Ω–∏–º—É–º 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫.</b>\n' \
                           f'<i>üë•–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>{calc_obj.employees_number}</b></i>'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback_query.from_user.id,
            username=callback_query.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—å—à–µ 1 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ù–æ –¥–ª—è –û–û–û –º–∏–Ω–∏–º—É–º 1.',
            last_name=callback_query.from_user.last_name,
            name=callback_query.from_user.first_name
        )
    elif calc_obj.employees_number < 0 and calc_obj.legal_form == '–ò–ü':
        calc_obj.employees_number = 0
        text_for_message = f'üìé–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤\n\n' \
                           f'‚ùó<b>–ú–∏–Ω–∏–º—É–º 0 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.</b>\n' \
                           f'<i>üë•–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>{calc_obj.employees_number}</b></i>'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback_query.from_user.id,
            username=callback_query.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—å—à–µ 0 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ù–æ —Ç–∞–∫ –Ω–µ –±—ã–≤–∞–µ—Ç, –¥–ª—è –ò–ü –º–∏–Ω–∏–º—É–º 1.',
            last_name=callback_query.from_user.last_name,
            name=callback_query.from_user.first_name
        )
    inline_keyboard = await change_employees_numb_keyboard(employees_numb=calc_obj.employees_number)
    try:
        await callback_query.edit_message_text(
            text=text_for_message,
            reply_markup=inline_keyboard
        )
    except Exception:
        logger.info(f'–ö—Ç–æ-—Ç–æ –Ω–∞–∏–≤–Ω–æ —É–±–µ–∂–¥—ë–Ω, —á—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. '
                    f'\n\tTG ID {callback_query.from_user.id}')


@Client.on_callback_query(source_docs_fst_step_filter)
async def source_docs_fst_step(client, callback):
    """
    –ü–µ—Ä–≤—ã–π —à–∞–≥ –∏–∑ –¥–≤—É—Ö –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. –í—ã–±–æ—Ä –∫–æ–ª-–≤–∞ –¥–æ–∫–æ–≤ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞.
    :param client: –æ–±—ä–µ–∫—Ç –∫–ª–∏–µ–Ω—Ç–∞ pyrogram
    :param callback: –∞–ø–¥–µ–π—Ç –≤ –≤–∏–¥–µ –∫–æ–ª–±—ç–∫–∞(—Ä–∞–Ω—å—à–µ —è –ø–∏—Å–∞–ª callback_query. –£—Å—Ç–∞–ª :) —Ç–∞–∫ –º–Ω–æ–≥–æ –ø–∏—Å–∞—Ç—å)
    :return: None
    """
    await callback.answer('ü§ñ–í—ã–±–æ—Ä –∫–æ–ª-–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.')
    text_for_message = f'üìé<b>–í–µ–¥–µ–Ω–∏–µ –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞</b>\n\n' \
                       f'üìÑ–í—ã–±–µ—Ä–µ—Ç–µ –∫–∞–∫–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–µ—Å—Ç–∏.'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=SOURCE_DOCUMENTS_NUMB_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç—É –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–ª-–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )


@Client.on_callback_query(write_source_docs_and_ask_control_it_filter)
async def write_source_docs_and_ask_control_it(client, callback):
    """–ó–∞–ø–∏—Å—å –∫–æ–ª-–≤–∞ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –∑–∞–ø—Ä–æ—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫."""

    await callback.answer('ü§ñ–ù–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?')
    # –ó–∞–ø–∏—Å—å –∫–æ–ª-–≤–∞ –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫-–≤ –≤ –∫–ª–∞—Å—Å
    split_callback = callback.data.split()
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    if split_callback[1] == '0':
        calc_obj.source_docs_num = '0'
    elif split_callback[1] == '100':
        calc_obj.source_docs_num = '–î–æ 100'
    elif split_callback[1] == '999':
        calc_obj.source_docs_num = '–æ—Ç 100 –¥–æ 1000'
    elif split_callback[1] == '1000':
        calc_obj.source_docs_num = '—Å–≤—ã—à–µ 1000'
    # –ó–∞–ø—Ä–æ—Å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    text_for_message = f'üìé<b>–ù–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ –í–∞–º –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤?</b>üìÉ\n'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=SRC_DOCS_CONTROL_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )


@Client.on_callback_query(need_prod_accounting_filter)  # TODO: –Ω–∞–¥–æ –±—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä
async def write_control_src_docs_and_ask_prod_accounting(client, callback):
    """–ó–∞–ø–∏—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–≤. –¥–æ–∫-–≤ –∏ –∑–∞–ø—Ä–æ—Å –Ω–µ–æ–±—Ö. –≤–µ–¥–µ–Ω–∏–µ —Ç–æ–≤. —É—á—ë—Ç–∞."""

    await callback.answer('ü§ñ–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö?')
    # –ó–∞–ø–∏—Å—å –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∫–æ–Ω—Ç—Ä–æ–ª—è –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫-–≤ –≤ –∫–ª–∞—Å—Å
    split_callback = callback.data.split()
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    if split_callback[1] == 'yes':
        calc_obj.need_control_source_docs = '–î–∞'
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö
    text_for_message = f'üìé<b>–†–∞–±–æ—Ç–∞–µ—Ç–µ –ª–∏ –í—ã –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö?üõç</b>\n'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=WORK_ON_MP_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–°–ø—Ä–∞—à–∏–≤–∞–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –∫–ª–∏–µ–Ω—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )

    '''–∫–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö'''


@Client.on_callback_query(work_on_mp_filter)
async def work_on_mp(client, callback):
    """–ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö"""

    await callback.answer('ü§ñ–í—ã–±–µ—Ä–µ—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã?')
    # –ó–∞–ø—Ä–æ—Å –Ω–∞ –∫–∞–∫–∏—Ö –∏–º–µ–Ω–Ω–æ –ú–ü —Ä–∞–±–æ—Ç–∞–µ—Ç
    text_for_message = f'üìé<b>–û—Ç–º–µ—Ç—å—Ç–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –í—ã –≤–µ–¥—ë—Ç–µ –±–∏–∑–Ω–µ—Å.üõç</b>\n'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=await form_choice_mp_kbrd(tlg_id=callback.from_user.id)
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ú–ü, —Å–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–∞ –∫–∞–∫–∏—Ö.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )


@Client.on_callback_query(change_mp_choice_filter)
async def change_mp_choice(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤"""

    await callback.answer('ü§ñ–í—ã–±–æ—Ä –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤')
    # –î–æ—Å—Ç–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    if callback.data.split()[2] == 'unchoiced':
        # –û—Ç–º–µ—á–∞–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –∫–∞–∫ –≤—ã–±—Ä–∞–Ω–Ω—ã–π
        choice_mp_flag = True
        fst_part_of_text = '–≤—ã–±—Ä–∞–Ω‚ûï'
    else:
        # –û—Ç–º–µ—á–∞–µ–º –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –∫–∞–∫ –Ω–µ–≤—ã–±—Ä–∞–Ω–Ω—ã–π
        choice_mp_flag = False
        fst_part_of_text = '—Å–Ω—è—Ç‚ûñ'
    # –í—ã–±–∏—Ä–∞–µ–º –∏ –æ—Ç–º–µ—á–∞–µ–º –Ω—É–∂–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å
    if callback.data.split()[1] == 'yandex_market':
        calc_obj.yandex_market = choice_mp_flag
        sec_part_of_text = f'<b>–Ø–Ω–¥–µ–∫—Å –ú–∞—Ä–∫–µ—Ç</b>'
    elif callback.data.split()[1] == 'wildber':
        calc_obj.wildber = choice_mp_flag
        sec_part_of_text = f'<b>Wildberries</b>'
    elif callback.data.split()[1] == 'ozon':
        calc_obj.ozon = choice_mp_flag
        sec_part_of_text = f'<b>OZON</b>'
    else:
        calc_obj.other_mp = choice_mp_flag
        sec_part_of_text = f'<b>–î—Ä—É–≥–æ–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å</b>'
    # –ò–∑–º–µ–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    text_for_message = f'üëå–û–∫–µ–π.\n\nüõç{sec_part_of_text} {fst_part_of_text}'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=await form_choice_mp_kbrd(tlg_id=callback.from_user.id)
    )


@Client.on_callback_query(need_prod_accounting_after_mp_filter)
async def need_prod_accounting(client, callback):
    """–°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞"""

    await callback.answer('ü§ñ–ù–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ —Ç–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç')
    await callback.edit_message_text(
        text=f'üìé–ù–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ –í–∞–º <b>—Ç–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç</b>?üõí',
        reply_markup=PRODUCT_ACCOUNTING_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–°–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º –ª–∏ –∫–ª–∏–µ–Ω—Ç—É —Ç–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )
    # TODO: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —ç—Ç–æ –¥–µ–ª–æ
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    mp_write_rslt = await calc_obj.send_marketplaces_to_btrx(tlg_id=callback.from_user.id)
    if not mp_write_rslt:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback.from_user.id,
            username=callback.from_user.username,
            msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –∑–∞–ø–∏—Å–∏ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–æ–≤ –≤ —Å–¥–µ–ª–∫—É!',
            last_name=callback.from_user.last_name,
            name=callback.from_user.first_name
        )

    '''—Ç–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç –Ω—É–∂–µ–Ω (–Ω–∞—á–∞–ª–æ)'''


@Client.on_callback_query(input_numb_docs_for_prod_acc_filter)
async def input_numb_docs_for_prod_acc(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª-–≤–∞ –¥–æ–∫-–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞"""

    await callback.answer('ü§ñ–í—ã–±–æ—Ä –∫–æ–ª-–≤–∞ –¥–æ–∫-–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞')
    # –ó–∞–ø–∏—Å—å –≤ –∫–ª–∞—Å—Å –¥–∞–Ω–Ω—ã—Ö –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    calc_obj.need_prod_accounting = '–î–∞'
    # –ó–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤. —É—á—ë—Ç–∞
    calc_obj.prod_accounting_docs_numb = 1
    text_for_message = f'üìé–í—ã–±–µ—Ä–µ—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞</b>'
    inline_keyboard = await change_product_docs_keyboard(prod_docs_numb=calc_obj.prod_accounting_docs_numb)
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=inline_keyboard
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∫–æ–ª-–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )


@Client.on_callback_query(minus_prod_doc_filter)
async def minus_prod_doc(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É –º–∏–Ω—É—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞."""

    await callback.answer('ü§ñ–ú–∏–Ω—É—Å –¥–æ–∫—É–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞')
    prod_docs_numb = int(callback.data.split()[1])
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    calc_obj.prod_accounting_docs_numb -= prod_docs_numb
    text_for_message = f'üìé–í—ã–±–µ—Ä–µ—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞</b>\n\n' \
                       f'üìÑ<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {calc_obj.prod_accounting_docs_numb}</i>'
    if calc_obj.prod_accounting_docs_numb < 1:
        calc_obj.prod_accounting_docs_numb = 1
        text_for_message = f'üìé–í—ã–±–µ—Ä–µ—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞</b>\n\n' \
                           f'‚ùó<b>–ú–∏–Ω–∏–º—É–º 1 –¥–æ–∫—É–º–µ–Ω—Ç.</b>\n' \
                           f'üìÑ<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {calc_obj.prod_accounting_docs_numb}</i>'
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback.from_user.id,
            username=callback.from_user.username,
            msg_text=f'–ö–ª–∏–µ–Ω—Ç –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–±—Ä–∞—Ç—å –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞. –ú–∏–Ω–∏–º—É–º 1 –¥–æ–∫—É–º–µ–Ω—Ç.',
            last_name=callback.from_user.last_name,
            name=callback.from_user.first_name
        )
    inline_keyboard = await change_product_docs_keyboard(prod_docs_numb=calc_obj.prod_accounting_docs_numb)
    try:
        await callback.edit_message_text(
            text=text_for_message,
            reply_markup=inline_keyboard
        )
    except Exception:
        logger.info(f'–ö—Ç–æ-—Ç–æ –Ω–∞–∏–≤–Ω–æ —É–±–µ–∂–¥—ë–Ω, —á—Ç–æ –º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å —Å–µ–±–µ –º–µ–Ω—å—à–µ –æ–¥–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞. '
                    f'\n\tTG ID {callback.from_user.id}')


@Client.on_callback_query(plus_prod_doc_filter)
async def plus_prod_doc(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–ª—é—Å –¥–æ–∫—É–º–µ–Ω—Ç–∞ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞."""

    await callback.answer('ü§ñ–ü–ª—é—Å –¥–æ–∫—É–º–µ–Ω—Ç —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞')
    prod_docs_numb = int(callback.data.split()[1])
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    calc_obj.prod_accounting_docs_numb += prod_docs_numb
    text_for_message = f'üìé–í—ã–±–µ—Ä–µ—Ç–µ <b>–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞</b>\n\n' \
                       f'üìÑ<i>–¢–µ–∫—É—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤: {calc_obj.prod_accounting_docs_numb}</i>'
    inline_keyboard = await change_product_docs_keyboard(prod_docs_numb=calc_obj.prod_accounting_docs_numb)
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=inline_keyboard
    )


@Client.on_callback_query(need_product_reporting_filter)
async def need_product_reporting(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä, –≤ –∫–æ—Ç–æ—Ä–æ–º –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É—á—ë—Ç–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, —Ç—Ä–µ–±—É—é—â–∏–º –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É."""

    await callback.answer('ü§ñ–£—á—ë—Ç –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç—å –ø–æ —Ç–æ–≤–∞—Ä–∞–º, —Ç—Ä–µ–±. –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É')
    text_for_message = f'üìé–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ª–∏ <b>–≤–µ–¥–µ–Ω–∏–µ —É—á—ë—Ç–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, —Ç—Ä–µ–±—É—é—â–∏–º –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É?</b>üè∑Ô∏è'
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=PRODUCT_REPORTING_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç—å —É—á—ë—Ç–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, —Ç—Ä–µ–±—É—é—â–∏–º –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )

    '''—Ç–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç –Ω—É–∂–µ–Ω (–∫–æ–Ω–µ—Ü)'''


''' –ë–ò–ó–ù–ï–° –û–°–£–©–ï–°–¢–í–õ–Ø–ï–¢ –í–ï–î–ï–ù–ò–ï –î–ï–Ø–¢–ï–õ–¨–ù–û–°–¢–ò (–ö–û–ù–ï–¶) '''


@Client.on_callback_query(show_buh_result_filter)
async def show_buh_result(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–º –æ–ø—Ü–∏–π –±—É—Ö. —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è"""

    await callback.answer('ü§ñ–û—Ç–æ–±—Ä–∞–∂–∞—é –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏')
    # –°–ø–µ—Ä–≤–∞ –∑–∞–ø–∏—Å—å –ø–æ —Ç–æ–≤–∞—Ä–∞–º —Ç—Ä–µ–±. –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    if len(callback.data.split()) == 2 and callback.data.split()[1] == 'need_report':
        calc_obj.prod_requiring_labeling = '–î–∞'
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π
    text_for_message = await make_text_for_buh_result(user_id=callback.from_user.id)
    await callback.edit_message_text(
        text=text_for_message,
        reply_markup=SHOW_BUH_OPTIONS_KBRD
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–û—Ç–æ–±—Ä–∞–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–º –æ–ø—Ü–∏–∏ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )


@Client.on_callback_query(calculate_cost_filter)
async def calculate_cost(client, callback):
    """–•—ç–Ω–¥–ª–µ—Ä –¥–Ω—è –∫–Ω–æ–ø–∫–∏ —Ä–∞—Å—á—ë—Ç–∞ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–ø—Ü–∏–π –±—É—Ö. —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è."""

    await callback.answer('ü§ñ–†–∞—Å—á—ë—Ç —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –æ–ø—Ü–∏–π')
    calc_obj = USER_DATA_STORAGE[callback.from_user.id].get('calculator')
    await callback.edit_message_text(
        text='<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã</b>\n\n'
             f'üìë–Ø –ø—Ä–∏—à–ª—é –í–∞–º —Å–∫–æ—Ä–æ —Å—á√´—Ç –∏ –¥–æ–≥–æ–≤–æ—Ä.'
    )
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
    await post_send_msg_to_open_line(
        tlg_id=callback.from_user.id,
        username=callback.from_user.username,
        msg_text=f'–ö–ª–∏–µ–Ω—Ç –Ω–∞–∂–∞–ª "–†–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å". –£–≤–µ–¥–æ–º–ª—è–µ–º –µ–≥–æ –æ —Ç–æ–º, —á—Ç–æ —Å–∫–æ—Ä–æ –ø—Ä–∏—à–ª—ë–º —Å—á—ë—Ç –∏ –¥–æ–≥–æ–≤–æ—Ä.',
        last_name=callback.from_user.last_name,
        name=callback.from_user.first_name
    )
    await calc_obj.set_product_id()  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–¥ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–æ–º –æ–ø—Ü–∏–∏ –±—É—Ö.—Å–æ–ø—Ä–æ–≤–æ–∂–¥.
    if calc_obj.product_id.find('over_1000') != -1:     # –ï—Å–ª–∏ —Å—Ä–µ–¥–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤—ã–±—Ä–∞–Ω–æ "—Å–≤—ã—à–µ 1000 –¥–æ–∫-–≤"
        await callback.edit_message_text(
            text='<b>üìë–í—ã–±—Ä–∞–Ω–æ —Å–≤—ã—à–µ 1000 –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —É—á—ë—Ç–∞</b>\n\n'
                 f'–ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏.\n<b>–°–ø–∞—Å–∏–±–æ –∑–∞ —É–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.</b>'
        )
        return

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ —Å–¥–µ–ª–∫—É –ë–∏—Ç—Ä–∏–∫—Å–∞
    add_prodcts_rslt = await post_for_add_products_in_deal_btrx(
        products=calc_obj.product_id,
        tlg_id=callback.from_user.id
    )
    if add_prodcts_rslt:  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º
        # –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –ë–∏—Ç—Ä–∏–∫—Å–µ
        gen_docs_rslt = await get_for_create_docs_in_btrx(tlg_id=callback.from_user.id)
        if not gen_docs_rslt:  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤–µ—Ä–Ω—É–ª False
            await callback.edit_message_text(
                text='üõ†–£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ. –ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.'
            )
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
            await post_send_msg_to_open_line(
                tlg_id=callback.from_user.id,
                username=callback.from_user.username,
                msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã! –ö–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤—ã–±–æ—Ä –æ–ø—Ü–∏–π –ø–æ–∑–∂–µ.',
                last_name=callback.from_user.last_name,
                name=callback.from_user.first_name
            )
    else:  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –±—ã–ª —É—Å–ø–µ—à–Ω—ã–º
        await callback.edit_message_text(
            text='üõ†–£ –±–æ—Ç–∞ —á—Ç–æ-—Ç–æ –Ω–µ–∏—Å–ø—Ä–∞–≤–Ω–æ. –ú—ã —É–∂–µ —Ä–∞–∑–±–∏—Ä–∞–µ–º—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–∑–∂–µ.'
        )
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –±–∏—Ç—Ä–∏–∫—Å–∞
        await post_send_msg_to_open_line(
            tlg_id=callback.from_user.id,
            username=callback.from_user.username,
            msg_text=f'–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ —Å–¥–µ–ª–∫—É! –ö–ª–∏–µ–Ω—Ç—É –±—ã–ª–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–æ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –ø–æ–∑–∂–µ.',
            last_name=callback.from_user.last_name,
            name=callback.from_user.first_name
        )
