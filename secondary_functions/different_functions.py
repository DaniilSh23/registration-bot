from bot_objects.user_data_objects import User, Company, BankDetail
from secondary_functions.req_to_bot_api import get_user_data, get_company_data, get_bank_data
from settings.config import USER_DATA_STORAGE


async def get_instance_from_storage_or_req(user_id):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±–µ—Ä—ë—Ç –∏–Ω—Å—Ç–∞–Ω—Å User –≤ —Å–ª–æ–≤–∞—Ä–µ-—Ö—Ä–∞–Ω–∏–ª–∏—â–µ –∏–ª–∏ –¥–æ—Å—Ç–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –∏ —Å–æ–∑–¥–∞—ë—Ç –∏–Ω—Å—Ç–∞–Ω—Å.
    """
    user_data = USER_DATA_STORAGE.get(user_id)
    if user_data:
        user_obj = user_data.get('user')
        if user_obj:
            return user_obj
    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ—É –∏–∑ –ë–î
    response = await get_user_data(tlg_id=user_id)
    if response:
        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
        user_obj = User(
            tlg_id=user_id,
            deal_id=response.get('deal_id'),
            tlg_username=response.get('tlg_username'),
            is_staff=response.get('is_staff'),
            telephone=response.get('telephone'),
            email=response.get('email'),
        )
        # –ò –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        return user_obj
    else:
        return False


async def get_company_data_from_storage_or_req(user_id):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç–∞—ë—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –∏–∑ –ª–æ–∫.—Ö—Ä–∞–Ω–∏–ª–∏—â–∞(—Å–ª–æ–≤–∞—Ä—è) –∏–ª–∏ –∏–∑ –ë–î.
    """
    user_data = USER_DATA_STORAGE.get(user_id)
    if user_data:
        comp_obj = user_data.get('company')
        if comp_obj:
            return comp_obj
    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ—É –∏–∑ –ë–î
    response = await get_company_data(tlg_id=user_id)
    if response:
        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
        comp_obj = Company(
            user_tlg_id=user_id,
            comp_name=response.get('comp_name'),
            address=response.get('address'),
            ogrn=response.get('ogrn'),
            inn=response.get('inn'),
            top_management_post=response.get('top_management_post'),
            top_management_name=response.get('top_management_name'),
        )
        # –ò –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        return comp_obj
    else:
        return False


async def get_bank_data_from_storage_or_req(user_id):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –¥–æ—Å—Ç–∞—ë—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞ –∏–ª–∏ –∏–∑ –ë–î.
    """
    # get_bank_data
    user_data = USER_DATA_STORAGE.get(user_id)
    if user_data:
        bank_obj = user_data.get('bank')
        if bank_obj:
            return bank_obj
    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ—É –∏–∑ –ë–î
    company_obj = await get_company_data_from_storage_or_req(user_id)   # –°–ø–µ—Ä–≤–∞ –ø–æ–¥—Ç—è–≥–∏–≤–∞–µ–º –∫–æ–º–ø–∞–Ω–∏—é —á–µ—Ä–µ–∑ —Ñ—É–Ω–∫—Ü–∏—é
    response = await get_bank_data(inn=company_obj.inn)
    if response:
        # –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞
        bank_obj = BankDetail(
            inn_comp=company_obj.inn,
            bik=response.get('bik'),
            rs=response.get('rs'),
            cor_a=response.get('cor_a'),
            bank_name=response.get('bank_name'),
        )
        # –ò –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
        return bank_obj
    else:
        return False


async def make_text_for_buh_result(user_id):
    """–°–æ–∑–¥–∞—ë–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π –±—É—Ö. —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è."""

    calc_obj = USER_DATA_STORAGE[user_id].get('calculator')
    positions_lst = [
        '‚ñ´Ô∏è–ü—Ä–∞–≤–æ–≤–∞—è —Ñ–æ—Ä–º–∞:',
        '‚ñ´Ô∏è–°–∏—Å—Ç–µ–º–∞ –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è:',
        '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ç–µ–Ω—Ç–æ–≤:',
        '‚ñ´Ô∏è–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤:',
        '‚ñ´Ô∏è–ö–æ–ª-–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç–∞:',
        '‚ñ´Ô∏è–ù–µ–æ–±—Ö–æ–¥–∏–º –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–µ—Ä–≤–∏—á–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:',
        '‚ñ´Ô∏è–¢–æ–≤–∞—Ä–Ω—ã–π —É—á—ë—Ç:',
        '‚ñ´Ô∏è–ö–æ–ª-–≤–æ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Ç–æ–≤–∞—Ä–Ω–æ–≥–æ —É—á—ë—Ç–∞:',
        '‚ñ´Ô∏è–í–µ–¥–µ–Ω–∏–µ —É—á—ë—Ç–∞ –∏ –æ—Ç—á—ë—Ç–Ω–æ—Å—Ç–∏ –ø–æ —Ç–æ–≤–∞—Ä–∞–º, —Ç—Ä–µ–±—É—é—â–∏–º –º–∞—Ä–∫–∏—Ä–æ–≤–∫—É:'
    ]
    selected_options_lst = [
        calc_obj.legal_form,
        calc_obj.tax_system,
        calc_obj.patent_numbers,
        calc_obj.employees_number,
        calc_obj.source_docs_num,
        calc_obj.need_control_source_docs,
        calc_obj.need_prod_accounting,
        calc_obj.prod_accounting_docs_numb,
        calc_obj.prod_requiring_labeling,
    ]
    text_for_message = 'üìí<b>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –æ–ø—Ü–∏–∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏—è:</b>\n\n'
    for i_indx in range(9):
        if selected_options_lst[i_indx] or selected_options_lst[i_indx] == 0:
            text_for_message = ''.join([
                text_for_message,
                f'<b>{positions_lst[i_indx]}</b>',
                f' {selected_options_lst[i_indx]}\n'
            ])
    return text_for_message
